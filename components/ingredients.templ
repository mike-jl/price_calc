package components

import (
	"fmt"
	"github.com/mike-jl/price_calc/db"
	"github.com/mike-jl/price_calc/services"
	"time"
)

templ IngredientsTable(ingredients []db.IngredientWithPrices, units services.UnitsMap) {
	<section class="hero is-info">
		<form hx-put="/ingredient" hx-swap="afterbegin" hx-target="#ingredient-table-body">
			<div class="hero-body">
				<div class="field">
					<label class="label">New Ingredient</label>
					<div class="field has-addons">
						<div class="control">
							<input class="input" type="text" placeholder="Ingredient Name" name="name"/>
						</div>
						<div class="control">
							<button class="button is-success" type="submit">
								Add
							</button>
						</div>
					</div>
				</div>
			</div>
		</form>
	</section>
	<section class="section product-row" id="ingredient-table-body">
		for _, ingredient := range ingredients {
			@IngredientRow(ingredient, units)
		}
	</section>
}

templ IngredientRow(ingredient db.IngredientWithPrices, units services.UnitsMap) {
	<div class="block">
		<div class="columns  is-align-items-flex-end">
			<div class="column">
				<div class="field">
					<label class="label is-hidden-tablet product-label">Name</label>
					<div class="control">
						<input class="input" type="text" value={ ingredient.Ingredient.Name } disabled/>
					</div>
				</div>
			</div>
			<div
				class="column"
				id={ fmt.Sprintf("ingredient-%d-price", ingredient.Ingredient.ID) }
			>
				<div class="field">
					<label class="label is-hidden-tablet product-label">Price</label>
					<div class="field has-addons">
						<p class="control is-expanded">
							<input
								class="input"
								type="text"
								disabled
								if len(ingredient.Prices) > 0 {
									value={ fmt.Sprintf("%.2f", *ingredient.Prices[0].Price) }
								} else {
									value="N/A"
								}
							/>
						</p>
						if len(ingredient.Prices) > 0 {
							<p class="control">
								<a class="button is-static">€</a>
							</p>
						}
					</div>
				</div>
			</div>
			<div class="column">
				<div class="field">
					<label class="label is-hidden-tablet product-label">Per</label>
					<div class="field has-addons">
						<p class="control is-expanded">
							<input
								class="input"
								type="text"
								disabled
								if len(ingredient.Prices) > 0 {
									value={ fmt.Sprintf("%.2f", ingredient.Prices[0].Quantity) }
								} else {
									value="N/A"
								}
							/>
						</p>
						if len(ingredient.Prices) > 0 {
							<p class="control">
								<a class="button is-static">{ units[ingredient.Prices[0].UnitID].Name }</a>
							</p>
						}
					</div>
				</div>
			</div>
			<div class="column">
				<button
					class="button"
					hx-get={ fmt.Sprintf("/ingredient/%d/edit", ingredient.Ingredient.ID) }
					hx-target="closest .block"
					hx-swap="outerHTML"
				>
					Edit
				</button>
			</div>
		</div>
	</div>
}

templ IngredientRowEdit(ingredient db.IngredientWithPrices, units services.UnitsMap) {
	<div class="block">
		<div class="columns  is-align-items-flex-end">
			<div class="column">
				<div class="field">
					<label class="label is-hidden-tablet product-label">Name</label>
					<div class="control">
						<input
							class="input"
							type="text"
							value={ ingredient.Ingredient.Name }
							form={ fmt.Sprintf("ingredient-form-%d", ingredient.Ingredient.ID) }
							name="name"
						/>
					</div>
				</div>
			</div>
			<div
				class="column"
				id={ fmt.Sprintf("ingredient-%d-price", ingredient.Ingredient.ID) }
			>
				<div class="field">
					<label class="label is-hidden-tablet product-label">Price</label>
					<div class="field has-addons">
						<p class="control is-expanded">
							<input
								class="input"
								type="text"
								form={ fmt.Sprintf("ingredient-form-%d", ingredient.Ingredient.ID) }
								name="price"
								if len(ingredient.Prices) > 0 {
									value={ fmt.Sprintf("%.2f", *ingredient.Prices[0].Price) }
								} else {
									value=""
								}
							/>
						</p>
						if len(ingredient.Prices) > 0 {
							<p class="control">
								<a class="button is-static">€</a>
							</p>
						}
					</div>
				</div>
			</div>
			<div class="column">
				<div class="field">
					<label class="label is-hidden-tablet product-label">Per</label>
					<div class="field has-addons">
						<p class="control is-expanded">
							<input
								class="input is-fullwidth"
								type="text"
								form={ fmt.Sprintf("ingredient-form-%d", ingredient.Ingredient.ID) }
								if len(ingredient.Prices) > 0 {
									value={ fmt.Sprintf("%.2f", *ingredient.Prices[0].Price) }
								} else {
									value=""
								}
								name="quantity"
								id={ fmt.Sprintf("amount-%d", ingredient.Ingredient.ID) }
								data-ingredient-id={ fmt.Sprintf("%d", ingredient.Ingredient.ID) }
							/>
						</p>
						<p class="control">
							<span class="select">
								<select
									form={ fmt.Sprintf("ingredient-form-%d", ingredient.Ingredient.ID) }
									name="unit"
									id={ fmt.Sprintf("unit-%d", ingredient.Ingredient.ID) }
									data-ingredient-id={ fmt.Sprintf("%d", ingredient.Ingredient.ID) }
								>
									for _, unit := range(units) {
										<option
											selected?={ len(ingredient.Prices) > 0 && ingredient.Prices[0].UnitID == unit.ID }
											value={ fmt.Sprintf("%d", unit.ID) }
										>{ unit.Name }</option>
									}
								</select>
							</span>
						</p>
					</div>
				</div>
			</div>
			<div class="column">
				<form
					id={ fmt.Sprintf("ingredient-form-%d", ingredient.Ingredient.ID) }
				>
					<button
						type="submit"
						class="button"
						hx-put={ fmt.Sprintf("/ingredient-price/%d", ingredient.Ingredient.ID) }
						hx-target="closest .block"
						hx-swap="outerHTML"
					>
						Safe
					</button>
					<button class="button">
						Delete
					</button>
				</form>
			</div>
		</div>
	</div>
}

templ IngredientPriceOob(price db.IngredientPrice, units services.UnitsMap) {
	<template>
		<td hx-swap-oob="outerHTML" id={ fmt.Sprintf("ingredient-%d-price", price.IngredientID) }>
			{ fmt.Sprintf("%.2f €", *price.Price / units[price.UnitID].Factor ) } /
			{ fmt.Sprintf("%.2f %s", price.Quantity * units[price.UnitID].Factor, units[price.UnitID].Name) }
		</td>
	</template>
	<template>
		<tbody hx-swap-oob="afterbegin" id={ fmt.Sprintf("ingredient-price-table-body-%d", price.IngredientID) }>
			<tr>
				<td>{ fmt.Sprintf("%.2f €", *price.Price) }</td>
				<td>{ fmt.Sprintf("%.2f %s", price.Quantity, units[price.UnitID].Name) }</td>
				<td>{ time.Unix(price.TimeStamp, 0).Format("2006-01-02 15:04:05") }</td>
			</tr>
		</tbody>
	</template>
}
