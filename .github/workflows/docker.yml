name: Build and Push Docker Image

on:
    push:
        branches: [main]
        tags: ['v*.*.*']

permissions:
    contents: read
    packages: write

jobs:
    docker:
        runs-on: ubuntu-latest

        env:
            GOOS: linux
            CGO_ENABLED: 0

        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Generate Code
              uses: ./.github/actions/codegen

            - name: Build Go binaries (amd64 + arm64)
              run: |
                  for ARCH in amd64 arm64; do
                    mkdir -p dist/$ARCH
                    GOARCH=$ARCH CC=$CC go build -o dist/$ARCH/main .
                  done

            - name: Prepare build context
              run: |
                  mkdir -p context/amd64 context/arm64
                  cp dist/amd64/main context/amd64/main
                  cp dist/arm64/main context/arm64/main

            - name: Set image tags
              id: vars
              run: |
                  IMAGE=ghcr.io/${{ github.repository }}
                  TAGS=()

                  if [[ "${{ github.ref }}" == refs/tags/* ]]; then
                    VERSION=${GITHUB_REF#refs/tags/}
                    TAGS+=("${IMAGE}:${VERSION}")
                    TAGS+=("${IMAGE}:latest")
                  else
                    SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
                    TAGS+=("${IMAGE}:${SHORT_SHA}")
                    TAGS+=("${IMAGE}:dev")
                  fi

                  echo "image=$IMAGE" >> $GITHUB_OUTPUT
                  { printf "tags<<EOF\n"; printf "%s\n" "${TAGS[@]}"; echo "EOF"; } >> $GITHUB_OUTPUT

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push multi-arch Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.vars.outputs.tags }}
                  platforms: linux/amd64,linux/arm64
                  build-contexts: |
                      binary-amd64=./context/amd64
                      binary-arm64=./context/arm64
